package entities;
// Generated Jan 18, 2021 6:27:16 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Prestamo generated by hbm2java
 */
@Entity
@Table(name="prestamo"
    ,catalog="institucion_financiera"
)
public class Prestamo  implements java.io.Serializable {


     private int id;
     private Persona persona;
     private Tipoprestamo tipoprestamo;
     private Date fecha;
     private double monto;
     private int numcuotas;
     private int estado;
     private Set<Detallefiador> detallefiadors = new HashSet<Detallefiador>(0);
     private Set<Contrato> contratos = new HashSet<Contrato>(0);
     private Set<Detallehipoteca> detallehipotecas = new HashSet<Detallehipoteca>(0);

    public Prestamo() {
    }

	
    public Prestamo(int id, Persona persona, Tipoprestamo tipoprestamo, Date fecha, double monto, int numcuotas, int estado) {
        this.id = id;
        this.persona = persona;
        this.tipoprestamo = tipoprestamo;
        this.fecha = fecha;
        this.monto = monto;
        this.numcuotas = numcuotas;
        this.estado = estado;
    }
    public Prestamo(int id, Persona persona, Tipoprestamo tipoprestamo, Date fecha, double monto, int numcuotas, int estado, Set<Detallefiador> detallefiadors, Set<Contrato> contratos, Set<Detallehipoteca> detallehipotecas) {
       this.id = id;
       this.persona = persona;
       this.tipoprestamo = tipoprestamo;
       this.fecha = fecha;
       this.monto = monto;
       this.numcuotas = numcuotas;
       this.estado = estado;
       this.detallefiadors = detallefiadors;
       this.contratos = contratos;
       this.detallehipotecas = detallehipotecas;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="idcliente", nullable=false)
    public Persona getPersona() {
        return this.persona;
    }
    
    public void setPersona(Persona persona) {
        this.persona = persona;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="idtipoprestamo", nullable=false)
    public Tipoprestamo getTipoprestamo() {
        return this.tipoprestamo;
    }
    
    public void setTipoprestamo(Tipoprestamo tipoprestamo) {
        this.tipoprestamo = tipoprestamo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fecha", nullable=false, length=10)
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    
    @Column(name="monto", nullable=false, precision=10)
    public double getMonto() {
        return this.monto;
    }
    
    public void setMonto(double monto) {
        this.monto = monto;
    }

    
    @Column(name="numcuotas", nullable=false)
    public int getNumcuotas() {
        return this.numcuotas;
    }
    
    public void setNumcuotas(int numcuotas) {
        this.numcuotas = numcuotas;
    }

    
    @Column(name="estado", nullable=false)
    public int getEstado() {
        return this.estado;
    }
    
    public void setEstado(int estado) {
        this.estado = estado;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="prestamo")
    public Set<Detallefiador> getDetallefiadors() {
        return this.detallefiadors;
    }
    
    public void setDetallefiadors(Set<Detallefiador> detallefiadors) {
        this.detallefiadors = detallefiadors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="prestamo")
    public Set<Contrato> getContratos() {
        return this.contratos;
    }
    
    public void setContratos(Set<Contrato> contratos) {
        this.contratos = contratos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="prestamo")
    public Set<Detallehipoteca> getDetallehipotecas() {
        return this.detallehipotecas;
    }
    
    public void setDetallehipotecas(Set<Detallehipoteca> detallehipotecas) {
        this.detallehipotecas = detallehipotecas;
    }




}


